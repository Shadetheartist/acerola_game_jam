[gd_scene load_steps=7 format=3 uid="uid://ifm5hopew57q"]

[sub_resource type="QuadMesh" id="QuadMesh_ioqex"]
size = Vector2(2, 2)

[sub_resource type="Shader" id="Shader_ssxbg"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mul,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,shadows_disabled,alpha_to_coverage;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float alpha_scissor_threshold;
uniform float alpha_antialiasing_edge;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;
uniform float cloud_speed : hint_range(0,1);

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,vec2(TIME*cloud_speed, TIME*cloud_speed) + base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	ALPHA *= albedo.a * albedo_tex.a;
	ALPHA_SCISSOR_THRESHOLD = alpha_scissor_threshold;
	ALPHA_ANTIALIASING_EDGE = alpha_antialiasing_edge;
	ALPHA_TEXTURE_COORDINATE = UV * vec2(albedo_texture_size);
}
"

[sub_resource type="Gradient" id="Gradient_bm0r2"]
interpolation_mode = 1
offsets = PackedFloat32Array(0, 0.402685)
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 0)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_r1ejk"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_10tbg"]
width = 1024
height = 1024
seamless = true
color_ramp = SubResource("Gradient_bm0r2")
noise = SubResource("FastNoiseLite_r1ejk")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4m17p"]
render_priority = 0
shader = SubResource("Shader_ssxbg")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/alpha_scissor_threshold = 0.085
shader_parameter/alpha_antialiasing_edge = 0.54
shader_parameter/albedo_texture_size = Vector2i(512, 512)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/cloud_speed = 0.011
shader_parameter/texture_albedo = SubResource("NoiseTexture2D_10tbg")

[node name="CloudCover" type="MeshInstance3D"]
transform = Transform3D(37.2348, 0, 0, 0, 4.88276e-06, 37.2348, 0, -37.2348, 4.88276e-06, -8.84609, 7.4574, -18.6037)
mesh = SubResource("QuadMesh_ioqex")
surface_material_override/0 = SubResource("ShaderMaterial_4m17p")
